# Run First
#msfrpcd -P password -n -f -a 127.0.0.1


from metasploit.msfrpc import MsfRpcClient
from metasploit.msfconsole import MsfRpcConsole
import configparser
import time

config = configparser.ConfigParser()

config.read('vuln.ini')

rhosts =  config['Settings']['RHOSTS']
vuln =    config['Settings']['VULN']
threads = config['Settings']['THREADS']
exploit = config['Settings']['EXPLOIT']


global global_positive_out
global_positive_out = list()
global global_console_status
global_console_status = False

def read_console(console_data):
    global global_console_status
    global_console_status = console_data['busy']
    print global_console_status
    if '[+]' in console_data['data']:
	sigdata = console_data['data'].rstrip().split('\n')
	for line in sigdata:
	    if '[+]' in line:
		global_positive_out.append(line)

    print console_data['data']
	

client = MsfRpcClient('password')

# cb - callback function, executes when data arrives to console
console = MsfRpcConsole(client, cb=read_console)

print("RHOSTS TO USE: " + rhosts)
print("VULNERABILITY TO CHECK: " + vuln)
print("THREADS TO USE: " + threads)
print("EXPLOIT TO USE: " + exploit)

time.sleep(5)




console.execute('use ' + vuln)
console.execute('set RHOSTS ' + rhosts)
console.execute('set ACTION CHECK')
console.execute('set THREADS ' + threads)
console.execute('run')
time.sleep(5)

while global_console_status:
    print 'global_console_status: ' + str(global_console_status)
    time.sleep(5)
time.sleep(5)

targets = list()
for line in global_positive_out:
    if 'FreeFloat' in line:
    	ip = re.findall(r'[0-9]+(?:\.[0-9]+){3}', line)[0]
	targets.append(ip)

print "VULNERABLE TARGETS: "
print targets

try:
   console.console.destroy()
except:
   sys.exit()





