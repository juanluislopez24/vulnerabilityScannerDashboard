# Run First
# msfrpcd -P password -n -f -a 127.0.0.1

import ssl
try:
    _create_unverified_https_context = ssl._create_unverified_context
except AttributeError:
    pass
else:
    ssl._create_default_https_context = _create_unverified_https_context


from metasploit.msfrpc import MsfRpcClient
from metasploit.msfconsole import MsfRpcConsole
import configparser
import time
import sys

config = configparser.ConfigParser()

global global_positive_out
global_positive_out = list()

global target_list
target_list = list()

global global_console_status
global_console_status = False

def read_console(console_data):
    global global_console_status
    global_console_status = console_data['busy']
    #print global_console_status
    if 'Response' in console_data['data']:
        print('aye')
        target_list.append(host)
        sigdata = console_data['data'].rstrip().split('\n')
        for line in sigdata:
            if 'Response' in line:
                global_positive_out.append(line)
    

    print console_data['data']
	


def init_metasploit(rhosts):

    config.read('vuln.ini')
    rhosts = rhosts
    vuln =    config['Settings']['VULN']
    threads = config['Settings']['THREADS']
    exploit = config['Settings']['EXPLOIT']

    client = MsfRpcClient('password')

    # cb - callback function, executes when data arrives to console
    console = MsfRpcConsole(client, cb=read_console)

    print("RHOSTS TO USE: " )#+ rhosts)
    print("VULNERABILITY TO CHECK: " + vuln)
    print("THREADS TO USE: " + threads)
    print("EXPLOIT TO USE: " + exploit)

    time.sleep(2)

    return console, rhosts, vuln, threads, exploit


def run_sploit(console, rhosts, vuln, threads, exploit):
    targets = list()
    
    for host in rhosts:
        global host
        console.execute('use ' + vuln)
        console.execute('set RHOSTS ' + str(host) )
        console.execute('set ACTION CHECK')
        console.execute('set THREADS ' + threads)
        console.execute('run')
        time.sleep(1)

        while global_console_status:
            print 'global_console_status: ' + str(global_console_status)
            time.sleep(5)

    print "VULNERABLE TARGETS: "
    print target_list


    
    try:
        console.console.destroy()
        return target_list
    except:
        sys.exit()
        return target_list
    #except:
    #    sys.exit()
